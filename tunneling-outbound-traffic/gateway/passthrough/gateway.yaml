admin:
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9902

static_resources:
  listeners:
  - name: "0.0.0.0_443"
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    # TLS inspector is required for extracting SNI from TLS handshake to use it later as %REQUESTED_SERVER_NAME%
    listener_filters:
    - name: tls_inspector
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    filter_chains:
    - filter_chain_match:
        transport_protocol: tls
        server_names:
        - "www.wikipedia.org"
      filters:
      - name: tunnel_proxy_client
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
              path: /dev/stdout
              format: "[%START_TIME%] DRA=%DOWNSTREAM_REMOTE_ADDRESS% UH=%UPSTREAM_HOST% ULA=%UPSTREAM_LOCAL_ADDRESS% [SNI: %REQUESTED_SERVER_NAME%]\" - %RESPONSE_CODE% - %RESPONSE_FLAGS% \n"
          cluster: tunnel_proxy
          stat_prefix: tunneling_proxy_client
          tunneling_config:
            hostname: "%REQUESTED_SERVER_NAME%:443"
  clusters:
  - name: tunnel_proxy
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: tunnel_proxy
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: tunnel-proxy
                port_value: 3128
    transport_socket:
      name: upstream_tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
